%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.3.1
%%CreationDate: Thu Jan 26 16:36:50 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: --noLP 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (sequence1)
} def

/sequence { (\
AUCGGUUCCAGCAGGAACUGUACUCAGAGACUCGGGAAACCUUCCCGGAAUUUUACCCGGGUUUUUACGU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.174307842 ubox
1 24 0.028107610 ubox
1 70 0.009299597 ubox
2 20 0.025857244 ubox
2 69 0.009798560 ubox
3 20 0.962728738 ubox
3 69 0.015401366 ubox
4 19 0.994690748 ubox
4 24 0.003856913 ubox
4 41 0.004962427 ubox
4 68 0.014390575 ubox
5 18 0.999894107 ubox
5 23 0.004307360 ubox
5 40 0.004968212 ubox
6 17 0.999469438 ubox
6 22 0.004215512 ubox
6 39 0.004057123 ubox
7 16 0.999614522 ubox
7 37 0.004003643 ubox
8 15 0.999953418 ubox
8 36 0.004900069 ubox
9 14 0.998511876 ubox
9 20 0.003975119 ubox
9 35 0.004893514 ubox
10 19 0.003982737 ubox
11 18 0.003963890 ubox
11 21 0.003557277 ubox
12 20 0.003628365 ubox
13 19 0.003620395 ubox
13 32 0.004219549 ubox
14 18 0.003541191 ubox
14 31 0.004497750 ubox
18 27 0.006330754 ubox
19 26 0.012628305 ubox
19 69 0.045607882 ubox
20 25 0.028261660 ubox
20 68 0.134282962 ubox
21 67 0.137045470 ubox
21 69 0.015638054 ubox
22 62 0.011539474 ubox
22 66 0.119243691 ubox
22 70 0.497473203 ubox
23 29 0.005018825 ubox
23 36 0.010372762 ubox
23 61 0.012497844 ubox
23 69 0.560262016 ubox
24 28 0.004670104 ubox
24 35 0.010438966 ubox
24 60 0.012489975 ubox
25 34 0.010476285 ubox
25 59 0.012417538 ubox
26 32 0.004556520 ubox
26 53 0.005877518 ubox
26 54 0.006839052 ubox
26 64 0.005704775 ubox
26 65 0.026503724 ubox
26 66 0.870433026 ubox
26 70 0.006990853 ubox
27 31 0.004539106 ubox
27 33 0.006575808 ubox
27 52 0.006324841 ubox
27 53 0.007231807 ubox
27 54 0.008735858 ubox
27 63 0.003752538 ubox
27 64 0.026034603 ubox
27 65 0.981327061 ubox
27 66 0.048074560 ubox
28 32 0.005730160 ubox
28 51 0.006353760 ubox
28 52 0.007175562 ubox
28 53 0.009114205 ubox
28 54 0.006124317 ubox
28 63 0.023485072 ubox
28 64 0.992507913 ubox
28 65 0.043077036 ubox
28 66 0.007204730 ubox
29 51 0.005928003 ubox
29 52 0.009148495 ubox
29 53 0.006310894 ubox
29 62 0.016654573 ubox
29 63 0.996928565 ubox
29 64 0.035394634 ubox
29 65 0.004477360 ubox
30 51 0.008868300 ubox
30 52 0.006234233 ubox
30 62 0.998716753 ubox
30 63 0.025079986 ubox
31 48 0.005790424 ubox
31 61 0.999489117 ubox
32 48 0.015212934 ubox
32 49 0.004541434 ubox
32 60 0.998824173 ubox
33 47 0.020651630 ubox
33 48 0.003332147 ubox
33 59 0.999283057 ubox
33 69 0.010292942 ubox
34 41 0.018359401 ubox
34 42 0.005517376 ubox
34 45 0.003266187 ubox
34 46 0.053035664 ubox
34 57 0.007819021 ubox
34 58 0.998182791 ubox
34 68 0.010639027 ubox
35 40 0.018374778 ubox
35 41 0.005943764 ubox
35 44 0.003361067 ubox
35 45 0.053463846 ubox
35 56 0.011011473 ubox
35 57 0.998134512 ubox
35 66 0.006263391 ubox
36 40 0.005859665 ubox
36 43 0.003351411 ubox
36 44 0.053578254 ubox
36 52 0.011322254 ubox
36 53 0.018031061 ubox
36 54 0.043919979 ubox
36 56 0.995727771 ubox
36 65 0.007856494 ubox
36 66 0.005337329 ubox
37 42 0.004671786 ubox
37 43 0.053047329 ubox
37 51 0.056618581 ubox
37 52 0.091561269 ubox
37 53 0.224116880 ubox
37 54 0.722040646 ubox
37 64 0.008113102 ubox
37 65 0.007926949 ubox
37 66 0.003835108 ubox
38 42 0.040438677 ubox
38 51 0.089669515 ubox
38 52 0.263246419 ubox
38 53 0.720332146 ubox
38 54 0.485279239 ubox
38 63 0.008140552 ubox
38 64 0.007745348 ubox
38 65 0.004050428 ubox
39 51 0.232178962 ubox
39 52 0.693127704 ubox
39 53 0.495845658 ubox
39 62 0.008083175 ubox
39 63 0.006288750 ubox
39 64 0.003855081 ubox
40 48 0.730874301 ubox
40 61 0.005559243 ubox
41 47 0.731053450 ubox
41 48 0.182613934 ubox
41 60 0.004195074 ubox
42 47 0.167154668 ubox
42 48 0.025550035 ubox
42 49 0.157908471 ubox
42 50 0.562859156 ubox
43 47 0.022644180 ubox
43 48 0.147631521 ubox
43 49 0.589168718 ubox
44 48 0.585723100 ubox
44 61 0.024731275 ubox
45 60 0.025873752 ubox
46 59 0.026290926 ubox
47 54 0.003652392 ubox
47 57 0.016877048 ubox
47 58 0.052658141 ubox
48 53 0.003607431 ubox
48 54 0.003525775 ubox
48 56 0.016938301 ubox
48 57 0.052694113 ubox
49 53 0.004129463 ubox
58 69 0.008823368 ubox
59 68 0.009026711 ubox
61 68 0.004428402 ubox
62 67 0.004360368 ubox
3 20 0.9500000 lbox
4 19 0.9500000 lbox
5 18 0.9500000 lbox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
9 14 0.9500000 lbox
26 66 0.9500000 lbox
27 65 0.9500000 lbox
28 64 0.9500000 lbox
29 63 0.9500000 lbox
30 62 0.9500000 lbox
31 61 0.9500000 lbox
32 60 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 54 0.9500000 lbox
38 53 0.9500000 lbox
39 52 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
showpage
end
%%EOF
